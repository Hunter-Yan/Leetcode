class ListNode():
    def __init__(self,x):
        self.val=x
        self.next=None
def InitList(array):
    root=ListNode(0)
    res=root
    for i in array:
        root.next=ListNode(i)
        root=root.next
    return res.next

def List(head):
    root=head
    list=[]
    while root:
        list.append(root.val)
        root=root.next
    return list



def rotateRight(head, k):
    if not head:
        return None

    if head.next == None:
        return head

    pointer = head
    length = 1

    while pointer.next:
        pointer = pointer.next
        length += 1

    rotateTimes = k % length

    if k == 0 or rotateTimes == 0:
        return head

    fastPointer = head
    slowPointer = head

    for a in range(rotateTimes):
        fastPointer = fastPointer.next

    while fastPointer.next:
        slowPointer = slowPointer.next
        fastPointer = fastPointer.next

    temp = slowPointer.next
    slowPointer.next = None
    fastPointer.next = head
    head = temp
    return head
head=InitList([1,2,3,4,5])
k=2
print(List(rotateRight(head,k)))
